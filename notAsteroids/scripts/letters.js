var canvas = document.getElementById("gameCanvas");
var ctx = canvas.getContext('2d');

var Text = {
    "A": [[-0.5, 1], [-0.5, -0.4], [-0.2, -1], [0.2, -1], [0.5, -0.4], [0.5, 1], [0.5, 0, 1], [-0.5, 0]],
    "B": [[-0.5, 1], [-0.5, -1], [0.2, -1], [0.5, -0.75], [0.5, -0.2], [0.2, 0], [-0.5, 0], [0.2, 0, 1], [0.5, 0.2], [0.5, 0.75], [0.2, 1], [-0.5, 1]],
    "C": [[0.5, -1], [-0.2, -1], [-0.5, -0.4], [-0.5, 0.4], [-0.2, 1], [0.5, 1]],
    "D": [[-0.5, -1], [0.2, -1], [0.5, -0.4], [0.5, 0.4], [0.2, 1], [-0.5, 1], [-0.5, -1]],
    "E": [[0.5, -1], [-0.5, -1], [-0.5, 1], [0.5, 1], [-0.5, 0, 1], [0.4, 0]],
    "F": [[0.5, -1], [-0.5, -1], [-0.5, 1], [-0.5, 0, 1], [0.4, 0]],
    "G": [[0.5, -1], [-0.2, -1], [-0.5, -0.4], [-0.5, 0.4], [-0.2, 1], [0.5, 1], [0.5, 0.2], [0.1, 0.2]],
    "H": [[-0.5, -1], [-0.5, 1], [0.5, -1, 1], [0.5, 1], [-0.5, 0, 1], [0.5, 0], ],
    "I": [[-0.5, -1], [0.5, -1], [0, -1, 1], [0, 1], [-0.5, 1, 1], [0.5, 1]],
    "J": [[0.5, -1], [0.5, 0.4], [0.2, 1], [-0.2, 1], [-0.5, 0.4]],
    "K": [[-0.5, -1], [-0.5, 1], [-0.5, 0, 1], [0.5, -1], [-0.5, 0, 1], [0.5, 1]],
    "L": [[-0.5, -1], [-0.5, 1], [0.5, 1]],
    "M": [[-0.5, 1], [-0.5, -1], [0, 0], [0.5, -1], [0.5, 1]],
    "N": [[-0.5, 1], [-0.5, -1], [0.5, 1], [0.5, -1]],
    "O": [[-0.5, -0.4], [-0.2, -1], [0.2, -1], [0.5, -0.4], [0.5, 0.4], [0.2, 1], [-0.2, 1], [-0.5, 0.4], [-0.5, -0.4]],
    "P": [[-0.5, 1], [-0.5, -1], [0.2, -1], [0.5, -0.75], [0.5, -0.2], [0.2, 0], [-0.5, 0]],
    "Q": [[-0.5, -0.4], [-0.2, -1], [0.2, -1], [0.5, -0.4], [0.5, 0.4], [0.2, 1], [-0.2, 1], [-0.5, 0.4], [-0.5, -0.4], [0, 0.4, 1], [0.5, 1]],
    "R": [[-0.5, 1], [-0.5, -1], [0.2, -1], [0.5, -0.75], [0.5, -0.2], [0.2, 0], [-0.5, 0], [0.5, 1]],
    "S": [[0.5, -1], [-0.2, -1], [-0.5, -0.75], [-0.5, -0.2], [-0.2, 0], [0.2, 0], [0.5, 0.2], [0.5, 0.75], [0.2, 1], [-0.5, 1]],
    "T": [[-0.5, -1], [0.5, -1], [0, -1, 1], [0, 1]],
    "U": [[0.5, -1], [0.5, 0.4], [0.2, 1], [-0.2, 1], [-0.5, 0.4], [-0.5, -1]],
    "V": [[-0.5, -1], [0, 1], [0.5, -1]],
    "W": [[-0.5, -1], [-0.5, 1], [0, -0.25], [0.5, 1], [0.5, -1]],
    "X": [[-0.5, -1], [0.5, 1], [0.5, -1, 1], [-0.5, 1]],
    "Y": [[-0.5, -1], [0, 0], [0.5, -1], [0, 0, 1], [0, 1]],
    "Z": [[-0.5, -1], [0.5, -1], [-0.5, 1], [0.5, 1]],
    "0": [[0.5, -0.4], [0.5, 0.4], [0.2, 1], [-0.2, 1], [-0.5, 0.4], [-0.5, -0.4], [-0.2, -1], [0.2, -1], [0.5, -0.4], [-0.5, 0.4]],
    "1": [[0, -1], [0, 1]],
    "2": [[-0.5, -1], [0.2, -1], [0.5, -0.75], [0.5, -0.2], [-0.5, 1], [0.5, 1]],
    "3": [[-0.5, -1], [0.2, -1], [0.5, -0.75], [0.5, -0.2], [0.2, 0], [-0.3, 0], [0.2, 0, 1], [0.5, 0.2], [0.5, 0.75], [0.2, 1], [-0.5, 1]],
    "4": [[-0.5, -1], [-0.5, 0], [0.5, 0], [0.5, 1, 1], [0.5, -1]],
    "5": [[0.5, -1], [-0.5, -1], [-0.5, 0], [0.2, 0], [0.5, 0.2], [0.5, 0.75], [0.2, 1], [-0.5, 1]],
    "6": [[-0.5, 0], [0.2, 0], [0.5, 0.2], [0.5, 0.75], [0.2, 1], [-0.2, 1], [-0.5, 0.75], [-0.5, -0.75], [-0.2, -1], [0.5, -1]],
    "7": [[-0.5, -1], [0.5, -1], [-0.25, 1]],
    "8": [[-0.2, 0], [-0.5, -0.2], [-0.5, -0.75], [-0.2, -1], [0.2, -1], [0.5, -0.75], [0.5, -0.2], [0.2, 0], [-0.2, 0], [-0.5, 0.2], [-0.5, 0.75], [-0.2, 1], [0.2, 1], [0.5, 0.75], [0.5, 0.2], [0.2, 0]],
    "9": [[0.5, -0.2], [0.2, 0], [-0.2, 0], [-0.5, -0.2], [-0.5, -0.75], [-0.2, -1], [0.2, -1], [0.5, -0.75], [0.5, 0.75], [0.2, 1], [-0.2, 1], [-0.5, 0.75]],
    ".": [[-0.5, 1], [-0.3, 1]],
    ":": [[-0.5, 0.5], [-0.3, 0.5], [-0.5, -0.5, 1], [-0.3, -0.5]]
}

function drawCharacter(x, y, scale, color, character) {
    let letter = Text[character];
    ctx.strokeStyle = color;
    ctx.beginPath();
    for (const coords of letter) {
        if (coords.length <= 2 || coords[2] == 0) {
            ctx.lineTo(
                x + coords[0] * scale,
                y + coords[1] * scale
            );
        }
        else
        {
            ctx.moveTo(
                x + coords[0] * scale,
                y + coords[1] * scale
            );
        }
    }
    ctx.stroke();
}

function drawText(x, y, scale, color, align, text) {
    let charX;
    let textLength = 0;
    for (const char of text) {
        if (".:".includes(char)) {
            textLength += 0.6 * scale;
        }
        else {
            textLength += 1.2 * scale;
        }
    }
    switch (align) {
        case "left":
            charX = x;
            break;
        case "center":
            charX = x - (textLength/2)
            break;
    }
    for (const char of text.toUpperCase()) {
        if (char != ' ') {
            drawCharacter(charX, y, scale, color, char);
        }
        if (".:".includes(char)) {
            charX += 0.6 * scale;
        }
        else {
            charX += 1.4 * scale;
        }
    }
}

export {drawText}